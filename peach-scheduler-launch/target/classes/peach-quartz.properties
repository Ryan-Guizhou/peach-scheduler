##调度标识名 集群中每一个实例都必须使用相同的名称
org.quartz.scheduler.instanceName = peach-quartz-scheduler
##ID设置为自动获取 每一个必须不同
org.quartz.scheduler.instanceId = AUTO
#
##数据保存方式为持久化
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
##StdJDBCDelegate说明支持集群
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
org.quartz.jobStore.tablePrefix = QRTZ_
#是否加入集群
org.quartz.jobStore.isClustered = false
#重新检索新加入集群的任务间隔时间 15s
org.quartz.jobStore.clusterCheckinInterval = 15000
org.quartz.jobStore.maxMisfiresToHandleAtATime = 1
##容许的最大作业延长时间ms
org.quartz.jobStore.misfireThreshold = 2000
##值为 True 时告诉 Quartz (当使用 JobStoreTX 或 CMT 时)
##调用 JDBC 连接的 setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE) 方法。
##这能助于防止某些数据库在高负荷和长事物时的锁超时。
org.quartz.jobStore.txIsolationLevelSerializable = true
org.quartz.jobStore.selectWithLockSQL = SELECT * FROM QRTZ_LOCKS WHERE LOCK_NAME = ? FOR UPDATE

#线程池
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
#线程数量
org.quartz.threadPool.threadCount = 10
#线程优先级
org.quartz.threadPool.threadPriority = 5
#线程继承初始化线程的上下文类加载器
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true

org.quartz.scheduler.skipUpdateCheck = true

org.quartz.plugin.triggHistory.class = org.quartz.plugins.history.LoggingJobHistoryPlugin
org.quartz.plugin.shutdownhook.class = org.quartz.plugins.management.ShutdownHookPlugin
org.quartz.plugin.shutdownhook.cleanShutdown = true
